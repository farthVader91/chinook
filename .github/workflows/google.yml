name: Build and Deploy to GKE

on:
  release:
    types: [created]

# Environment variables available to all jobs and steps in this workflow
env:
  GKE_PROJECT: ${{ secrets.GKE_PROJECT }}
  GKE_EMAIL: ${{ secrets.GKE_EMAIL }}
  GITHUB_SHA: ${{ github.sha }}
  GKE_ZONE: us-central1-c
  GKE_CLUSTER: my-first-cluster-1
  IMAGE: gke-test
  REGISTRY_HOSTNAME: index.docker.io
  DEPLOYMENT_NAME: chinook-spring-boot-deployment

jobs:
  build-publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    outputs:
      docker-tag: sha-${{ steps.vars.outputs.short-sha }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Cache Maven Repo
      uses: actions/cache@v2
      with:
        path: .m2/repository
        key: mvn-repo

    - name: Build with Maven
      run: mvn -B package -Dmaven.test.skip=true -Dmaven.repo.local=.m2/repository

    # Push the Docker image to Google Container Registry
    - name: Build & Publish
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: farthvader/chinook
        dockerfile: docker/Dockerfile
        build_args: GITHUB_SHA=$GITHUB_SHA,GITHUB_REF=$GITHUB_REF
        tag_with_sha: true
        tags: latest

    - id: vars
      run: echo "::set-output name=short-sha::$(git rev-parse --short HEAD)"

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build-publish
    env:
      DOCKER_TAG: ${{ needs.build-publish.outputs.docker-tag }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_email: ${{ secrets.GKE_EMAIL }}
        service_account_key: ${{ secrets.GKE_KEY }}

    # Set up kustomize
    - name: Set up Kustomize
      working-directory: k8s
      run: |
        curl -o kustomize --location https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      working-directory: k8s
      run: |
        gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $GKE_PROJECT
        ./kustomize edit set image farthvader/chinook:$DOCKER_TAG
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services/chinook-svc -o wide
